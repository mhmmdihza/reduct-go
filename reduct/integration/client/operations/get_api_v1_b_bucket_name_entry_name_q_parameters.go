// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAPIV1BBucketNameEntryNameQParams creates a new GetAPIV1BBucketNameEntryNameQParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPIV1BBucketNameEntryNameQParams() *GetAPIV1BBucketNameEntryNameQParams {
	return &GetAPIV1BBucketNameEntryNameQParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIV1BBucketNameEntryNameQParamsWithTimeout creates a new GetAPIV1BBucketNameEntryNameQParams object
// with the ability to set a timeout on a request.
func NewGetAPIV1BBucketNameEntryNameQParamsWithTimeout(timeout time.Duration) *GetAPIV1BBucketNameEntryNameQParams {
	return &GetAPIV1BBucketNameEntryNameQParams{
		timeout: timeout,
	}
}

// NewGetAPIV1BBucketNameEntryNameQParamsWithContext creates a new GetAPIV1BBucketNameEntryNameQParams object
// with the ability to set a context for a request.
func NewGetAPIV1BBucketNameEntryNameQParamsWithContext(ctx context.Context) *GetAPIV1BBucketNameEntryNameQParams {
	return &GetAPIV1BBucketNameEntryNameQParams{
		Context: ctx,
	}
}

// NewGetAPIV1BBucketNameEntryNameQParamsWithHTTPClient creates a new GetAPIV1BBucketNameEntryNameQParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPIV1BBucketNameEntryNameQParamsWithHTTPClient(client *http.Client) *GetAPIV1BBucketNameEntryNameQParams {
	return &GetAPIV1BBucketNameEntryNameQParams{
		HTTPClient: client,
	}
}

/*
GetAPIV1BBucketNameEntryNameQParams contains all the parameters to send to the API endpoint

	for the get API v1 b bucket name entry name q operation.

	Typically these are written to a http.Request.
*/
type GetAPIV1BBucketNameEntryNameQParams struct {

	/* BucketName.

	   Name of bucket
	*/
	BucketName string

	/* Continuous.

	   Keep query if no records for the request
	*/
	Continuous *bool

	/* Eachn.

	   Return only every N-th record
	*/
	Eachn *int64

	/* Eachs.

	   Return only one record per S seconds

	   Format: float
	*/
	Eachs *float32

	/* EntryName.

	   Name of entry
	*/
	EntryName string

	/* Limit.

	   Maximum number of records in the query
	*/
	Limit *int64

	/* Start.

	   Start time (UNIX timestamp in microseconds)

	   Format: int64
	*/
	Start *int64

	/* Stop.

	   Stop time (UNIX timestamp in microseconds)

	   Format: int64
	*/
	Stop *int64

	/* TTL.

	   TTL (Time To Live) of the query in seconds (default 5s)
	*/
	TTL *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get API v1 b bucket name entry name q params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIV1BBucketNameEntryNameQParams) WithDefaults() *GetAPIV1BBucketNameEntryNameQParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get API v1 b bucket name entry name q params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIV1BBucketNameEntryNameQParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithTimeout(timeout time.Duration) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithContext(ctx context.Context) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithHTTPClient(client *http.Client) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBucketName adds the bucketName to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithBucketName(bucketName string) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetBucketName(bucketName)
	return o
}

// SetBucketName adds the bucketName to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetBucketName(bucketName string) {
	o.BucketName = bucketName
}

// WithContinuous adds the continuous to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithContinuous(continuous *bool) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetContinuous(continuous)
	return o
}

// SetContinuous adds the continuous to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetContinuous(continuous *bool) {
	o.Continuous = continuous
}

// WithEachn adds the eachn to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithEachn(eachn *int64) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetEachn(eachn)
	return o
}

// SetEachn adds the eachN to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetEachn(eachn *int64) {
	o.Eachn = eachn
}

// WithEachs adds the eachs to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithEachs(eachs *float32) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetEachs(eachs)
	return o
}

// SetEachs adds the eachS to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetEachs(eachs *float32) {
	o.Eachs = eachs
}

// WithEntryName adds the entryName to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithEntryName(entryName string) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetEntryName(entryName)
	return o
}

// SetEntryName adds the entryName to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetEntryName(entryName string) {
	o.EntryName = entryName
}

// WithLimit adds the limit to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithLimit(limit *int64) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithStart adds the start to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithStart(start *int64) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetStart(start *int64) {
	o.Start = start
}

// WithStop adds the stop to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithStop(stop *int64) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetStop(stop)
	return o
}

// SetStop adds the stop to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetStop(stop *int64) {
	o.Stop = stop
}

// WithTTL adds the ttl to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) WithTTL(ttl *int64) *GetAPIV1BBucketNameEntryNameQParams {
	o.SetTTL(ttl)
	return o
}

// SetTTL adds the ttl to the get API v1 b bucket name entry name q params
func (o *GetAPIV1BBucketNameEntryNameQParams) SetTTL(ttl *int64) {
	o.TTL = ttl
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIV1BBucketNameEntryNameQParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param bucket_name
	if err := r.SetPathParam("bucket_name", o.BucketName); err != nil {
		return err
	}

	if o.Continuous != nil {

		// query param continuous
		var qrContinuous bool

		if o.Continuous != nil {
			qrContinuous = *o.Continuous
		}
		qContinuous := swag.FormatBool(qrContinuous)
		if qContinuous != "" {

			if err := r.SetQueryParam("continuous", qContinuous); err != nil {
				return err
			}
		}
	}

	if o.Eachn != nil {

		// query param each_n
		var qrEachn int64

		if o.Eachn != nil {
			qrEachn = *o.Eachn
		}
		qEachn := swag.FormatInt64(qrEachn)
		if qEachn != "" {

			if err := r.SetQueryParam("each_n", qEachn); err != nil {
				return err
			}
		}
	}

	if o.Eachs != nil {

		// query param each_s
		var qrEachs float32

		if o.Eachs != nil {
			qrEachs = *o.Eachs
		}
		qEachs := swag.FormatFloat32(qrEachs)
		if qEachs != "" {

			if err := r.SetQueryParam("each_s", qEachs); err != nil {
				return err
			}
		}
	}

	// path param entry_name
	if err := r.SetPathParam("entry_name", o.EntryName); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Start != nil {

		// query param start
		var qrStart int64

		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := swag.FormatInt64(qrStart)
		if qStart != "" {

			if err := r.SetQueryParam("start", qStart); err != nil {
				return err
			}
		}
	}

	if o.Stop != nil {

		// query param stop
		var qrStop int64

		if o.Stop != nil {
			qrStop = *o.Stop
		}
		qStop := swag.FormatInt64(qrStop)
		if qStop != "" {

			if err := r.SetQueryParam("stop", qStop); err != nil {
				return err
			}
		}
	}

	if o.TTL != nil {

		// query param ttl
		var qrTTL int64

		if o.TTL != nil {
			qrTTL = *o.TTL
		}
		qTTL := swag.FormatInt64(qrTTL)
		if qTTL != "" {

			if err := r.SetQueryParam("ttl", qTTL); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
