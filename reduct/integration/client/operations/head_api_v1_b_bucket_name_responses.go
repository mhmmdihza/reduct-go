// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HeadAPIV1BBucketNameReader is a Reader for the HeadAPIV1BBucketName structure.
type HeadAPIV1BBucketNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HeadAPIV1BBucketNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHeadAPIV1BBucketNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHeadAPIV1BBucketNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHeadAPIV1BBucketNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[HEAD /api/v1/b/{bucket_name}] HeadAPIV1BBucketName", response, response.Code())
	}
}

// NewHeadAPIV1BBucketNameOK creates a HeadAPIV1BBucketNameOK with default headers values
func NewHeadAPIV1BBucketNameOK() *HeadAPIV1BBucketNameOK {
	return &HeadAPIV1BBucketNameOK{}
}

/*
HeadAPIV1BBucketNameOK describes a response with status code 200, with default header values.

The bucket exists
*/
type HeadAPIV1BBucketNameOK struct {
}

// IsSuccess returns true when this head Api v1 b bucket name o k response has a 2xx status code
func (o *HeadAPIV1BBucketNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this head Api v1 b bucket name o k response has a 3xx status code
func (o *HeadAPIV1BBucketNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this head Api v1 b bucket name o k response has a 4xx status code
func (o *HeadAPIV1BBucketNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this head Api v1 b bucket name o k response has a 5xx status code
func (o *HeadAPIV1BBucketNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this head Api v1 b bucket name o k response a status code equal to that given
func (o *HeadAPIV1BBucketNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the head Api v1 b bucket name o k response
func (o *HeadAPIV1BBucketNameOK) Code() int {
	return 200
}

func (o *HeadAPIV1BBucketNameOK) Error() string {
	return fmt.Sprintf("[HEAD /api/v1/b/{bucket_name}][%d] headApiV1BBucketNameOK", 200)
}

func (o *HeadAPIV1BBucketNameOK) String() string {
	return fmt.Sprintf("[HEAD /api/v1/b/{bucket_name}][%d] headApiV1BBucketNameOK", 200)
}

func (o *HeadAPIV1BBucketNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHeadAPIV1BBucketNameUnauthorized creates a HeadAPIV1BBucketNameUnauthorized with default headers values
func NewHeadAPIV1BBucketNameUnauthorized() *HeadAPIV1BBucketNameUnauthorized {
	return &HeadAPIV1BBucketNameUnauthorized{}
}

/*
HeadAPIV1BBucketNameUnauthorized describes a response with status code 401, with default header values.

Access token is invalid or empty
*/
type HeadAPIV1BBucketNameUnauthorized struct {
}

// IsSuccess returns true when this head Api v1 b bucket name unauthorized response has a 2xx status code
func (o *HeadAPIV1BBucketNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this head Api v1 b bucket name unauthorized response has a 3xx status code
func (o *HeadAPIV1BBucketNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this head Api v1 b bucket name unauthorized response has a 4xx status code
func (o *HeadAPIV1BBucketNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this head Api v1 b bucket name unauthorized response has a 5xx status code
func (o *HeadAPIV1BBucketNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this head Api v1 b bucket name unauthorized response a status code equal to that given
func (o *HeadAPIV1BBucketNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the head Api v1 b bucket name unauthorized response
func (o *HeadAPIV1BBucketNameUnauthorized) Code() int {
	return 401
}

func (o *HeadAPIV1BBucketNameUnauthorized) Error() string {
	return fmt.Sprintf("[HEAD /api/v1/b/{bucket_name}][%d] headApiV1BBucketNameUnauthorized", 401)
}

func (o *HeadAPIV1BBucketNameUnauthorized) String() string {
	return fmt.Sprintf("[HEAD /api/v1/b/{bucket_name}][%d] headApiV1BBucketNameUnauthorized", 401)
}

func (o *HeadAPIV1BBucketNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHeadAPIV1BBucketNameNotFound creates a HeadAPIV1BBucketNameNotFound with default headers values
func NewHeadAPIV1BBucketNameNotFound() *HeadAPIV1BBucketNameNotFound {
	return &HeadAPIV1BBucketNameNotFound{}
}

/*
HeadAPIV1BBucketNameNotFound describes a response with status code 404, with default header values.

The bucket does not exist
*/
type HeadAPIV1BBucketNameNotFound struct {
}

// IsSuccess returns true when this head Api v1 b bucket name not found response has a 2xx status code
func (o *HeadAPIV1BBucketNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this head Api v1 b bucket name not found response has a 3xx status code
func (o *HeadAPIV1BBucketNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this head Api v1 b bucket name not found response has a 4xx status code
func (o *HeadAPIV1BBucketNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this head Api v1 b bucket name not found response has a 5xx status code
func (o *HeadAPIV1BBucketNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this head Api v1 b bucket name not found response a status code equal to that given
func (o *HeadAPIV1BBucketNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the head Api v1 b bucket name not found response
func (o *HeadAPIV1BBucketNameNotFound) Code() int {
	return 404
}

func (o *HeadAPIV1BBucketNameNotFound) Error() string {
	return fmt.Sprintf("[HEAD /api/v1/b/{bucket_name}][%d] headApiV1BBucketNameNotFound", 404)
}

func (o *HeadAPIV1BBucketNameNotFound) String() string {
	return fmt.Sprintf("[HEAD /api/v1/b/{bucket_name}][%d] headApiV1BBucketNameNotFound", 404)
}

func (o *HeadAPIV1BBucketNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
