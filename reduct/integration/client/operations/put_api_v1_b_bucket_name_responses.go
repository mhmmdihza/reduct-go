// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutAPIV1BBucketNameReader is a Reader for the PutAPIV1BBucketName structure.
type PutAPIV1BBucketNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAPIV1BBucketNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAPIV1BBucketNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutAPIV1BBucketNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAPIV1BBucketNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAPIV1BBucketNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutAPIV1BBucketNameConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutAPIV1BBucketNameUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/v1/b/{bucket_name}] PutAPIV1BBucketName", response, response.Code())
	}
}

// NewPutAPIV1BBucketNameOK creates a PutAPIV1BBucketNameOK with default headers values
func NewPutAPIV1BBucketNameOK() *PutAPIV1BBucketNameOK {
	return &PutAPIV1BBucketNameOK{}
}

/*
PutAPIV1BBucketNameOK describes a response with status code 200, with default header values.

The settings are updated
*/
type PutAPIV1BBucketNameOK struct {
}

// IsSuccess returns true when this put Api v1 b bucket name o k response has a 2xx status code
func (o *PutAPIV1BBucketNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put Api v1 b bucket name o k response has a 3xx status code
func (o *PutAPIV1BBucketNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put Api v1 b bucket name o k response has a 4xx status code
func (o *PutAPIV1BBucketNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put Api v1 b bucket name o k response has a 5xx status code
func (o *PutAPIV1BBucketNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put Api v1 b bucket name o k response a status code equal to that given
func (o *PutAPIV1BBucketNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put Api v1 b bucket name o k response
func (o *PutAPIV1BBucketNameOK) Code() int {
	return 200
}

func (o *PutAPIV1BBucketNameOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameOK", 200)
}

func (o *PutAPIV1BBucketNameOK) String() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameOK", 200)
}

func (o *PutAPIV1BBucketNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIV1BBucketNameUnauthorized creates a PutAPIV1BBucketNameUnauthorized with default headers values
func NewPutAPIV1BBucketNameUnauthorized() *PutAPIV1BBucketNameUnauthorized {
	return &PutAPIV1BBucketNameUnauthorized{}
}

/*
PutAPIV1BBucketNameUnauthorized describes a response with status code 401, with default header values.

Access token is invalid or empty
*/
type PutAPIV1BBucketNameUnauthorized struct {
}

// IsSuccess returns true when this put Api v1 b bucket name unauthorized response has a 2xx status code
func (o *PutAPIV1BBucketNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put Api v1 b bucket name unauthorized response has a 3xx status code
func (o *PutAPIV1BBucketNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put Api v1 b bucket name unauthorized response has a 4xx status code
func (o *PutAPIV1BBucketNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put Api v1 b bucket name unauthorized response has a 5xx status code
func (o *PutAPIV1BBucketNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put Api v1 b bucket name unauthorized response a status code equal to that given
func (o *PutAPIV1BBucketNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put Api v1 b bucket name unauthorized response
func (o *PutAPIV1BBucketNameUnauthorized) Code() int {
	return 401
}

func (o *PutAPIV1BBucketNameUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameUnauthorized", 401)
}

func (o *PutAPIV1BBucketNameUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameUnauthorized", 401)
}

func (o *PutAPIV1BBucketNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIV1BBucketNameForbidden creates a PutAPIV1BBucketNameForbidden with default headers values
func NewPutAPIV1BBucketNameForbidden() *PutAPIV1BBucketNameForbidden {
	return &PutAPIV1BBucketNameForbidden{}
}

/*
PutAPIV1BBucketNameForbidden describes a response with status code 403, with default header values.

Access token doesn't have enough permissions
*/
type PutAPIV1BBucketNameForbidden struct {
}

// IsSuccess returns true when this put Api v1 b bucket name forbidden response has a 2xx status code
func (o *PutAPIV1BBucketNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put Api v1 b bucket name forbidden response has a 3xx status code
func (o *PutAPIV1BBucketNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put Api v1 b bucket name forbidden response has a 4xx status code
func (o *PutAPIV1BBucketNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put Api v1 b bucket name forbidden response has a 5xx status code
func (o *PutAPIV1BBucketNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put Api v1 b bucket name forbidden response a status code equal to that given
func (o *PutAPIV1BBucketNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the put Api v1 b bucket name forbidden response
func (o *PutAPIV1BBucketNameForbidden) Code() int {
	return 403
}

func (o *PutAPIV1BBucketNameForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameForbidden", 403)
}

func (o *PutAPIV1BBucketNameForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameForbidden", 403)
}

func (o *PutAPIV1BBucketNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIV1BBucketNameNotFound creates a PutAPIV1BBucketNameNotFound with default headers values
func NewPutAPIV1BBucketNameNotFound() *PutAPIV1BBucketNameNotFound {
	return &PutAPIV1BBucketNameNotFound{}
}

/*
PutAPIV1BBucketNameNotFound describes a response with status code 404, with default header values.

Bucket doesn't exist
*/
type PutAPIV1BBucketNameNotFound struct {
}

// IsSuccess returns true when this put Api v1 b bucket name not found response has a 2xx status code
func (o *PutAPIV1BBucketNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put Api v1 b bucket name not found response has a 3xx status code
func (o *PutAPIV1BBucketNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put Api v1 b bucket name not found response has a 4xx status code
func (o *PutAPIV1BBucketNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put Api v1 b bucket name not found response has a 5xx status code
func (o *PutAPIV1BBucketNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put Api v1 b bucket name not found response a status code equal to that given
func (o *PutAPIV1BBucketNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put Api v1 b bucket name not found response
func (o *PutAPIV1BBucketNameNotFound) Code() int {
	return 404
}

func (o *PutAPIV1BBucketNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameNotFound", 404)
}

func (o *PutAPIV1BBucketNameNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameNotFound", 404)
}

func (o *PutAPIV1BBucketNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIV1BBucketNameConflict creates a PutAPIV1BBucketNameConflict with default headers values
func NewPutAPIV1BBucketNameConflict() *PutAPIV1BBucketNameConflict {
	return &PutAPIV1BBucketNameConflict{}
}

/*
PutAPIV1BBucketNameConflict describes a response with status code 409, with default header values.

Bucket is provisioned
*/
type PutAPIV1BBucketNameConflict struct {
}

// IsSuccess returns true when this put Api v1 b bucket name conflict response has a 2xx status code
func (o *PutAPIV1BBucketNameConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put Api v1 b bucket name conflict response has a 3xx status code
func (o *PutAPIV1BBucketNameConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put Api v1 b bucket name conflict response has a 4xx status code
func (o *PutAPIV1BBucketNameConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this put Api v1 b bucket name conflict response has a 5xx status code
func (o *PutAPIV1BBucketNameConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this put Api v1 b bucket name conflict response a status code equal to that given
func (o *PutAPIV1BBucketNameConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the put Api v1 b bucket name conflict response
func (o *PutAPIV1BBucketNameConflict) Code() int {
	return 409
}

func (o *PutAPIV1BBucketNameConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameConflict", 409)
}

func (o *PutAPIV1BBucketNameConflict) String() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameConflict", 409)
}

func (o *PutAPIV1BBucketNameConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIV1BBucketNameUnprocessableEntity creates a PutAPIV1BBucketNameUnprocessableEntity with default headers values
func NewPutAPIV1BBucketNameUnprocessableEntity() *PutAPIV1BBucketNameUnprocessableEntity {
	return &PutAPIV1BBucketNameUnprocessableEntity{}
}

/*
PutAPIV1BBucketNameUnprocessableEntity describes a response with status code 422, with default header values.

JSON request is invalid
*/
type PutAPIV1BBucketNameUnprocessableEntity struct {
}

// IsSuccess returns true when this put Api v1 b bucket name unprocessable entity response has a 2xx status code
func (o *PutAPIV1BBucketNameUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put Api v1 b bucket name unprocessable entity response has a 3xx status code
func (o *PutAPIV1BBucketNameUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put Api v1 b bucket name unprocessable entity response has a 4xx status code
func (o *PutAPIV1BBucketNameUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this put Api v1 b bucket name unprocessable entity response has a 5xx status code
func (o *PutAPIV1BBucketNameUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this put Api v1 b bucket name unprocessable entity response a status code equal to that given
func (o *PutAPIV1BBucketNameUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the put Api v1 b bucket name unprocessable entity response
func (o *PutAPIV1BBucketNameUnprocessableEntity) Code() int {
	return 422
}

func (o *PutAPIV1BBucketNameUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameUnprocessableEntity", 422)
}

func (o *PutAPIV1BBucketNameUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v1/b/{bucket_name}][%d] putApiV1BBucketNameUnprocessableEntity", 422)
}

func (o *PutAPIV1BBucketNameUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PutAPIV1BBucketNameBody put API v1 b bucket name body
swagger:model PutAPIV1BBucketNameBody
*/
type PutAPIV1BBucketNameBody struct {

	// Maximum number of records in a block
	MaxBlockRecords int64 `json:"max_block_records,omitempty"`

	// Maximum content_length of a data block in bytes
	MaxBlockSize int64 `json:"max_block_size,omitempty"`

	// Size of quota in bytes
	QuotaSize int64 `json:"quota_size,omitempty"`

	// Type of quota. Can be 'NONE', 'FIFO', or 'HARD'
	QuotaType string `json:"quota_type,omitempty"`
}

// Validate validates this put API v1 b bucket name body
func (o *PutAPIV1BBucketNameBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put API v1 b bucket name body based on context it is used
func (o *PutAPIV1BBucketNameBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutAPIV1BBucketNameBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutAPIV1BBucketNameBody) UnmarshalBinary(b []byte) error {
	var res PutAPIV1BBucketNameBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
